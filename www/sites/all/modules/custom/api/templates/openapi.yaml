openapi: 3.0.1
info:
  title: Heavymetal.dk API
  description: >-
    This is the official Heavymetal.dk REST API. In order to use the API, you
    must be granted an access key available upon request.
  contact:
    url: 'https://heavymetal.dk/contact'
  version: '1.0'
servers:
  - url: 'https://heavymetal.dk/api/v1'
tags:
  - name: review
    description: Album review
    externalDocs:
      description: Browse
      url: 'https://heavymetal.dk.dk/anmeldelser'
paths:
  '/reviews':
    get:
      tags:
        - review
      summary: Get a list of reviews
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first review returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of reviews returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid API key. You must be granted a valid key.
          content: {}
      security:
        - api_key: []
  '/reviews/{nodeId}':
    get:
      tags:
        - review
      summary: Get a single review
      parameters:
        - name: nodeId
          in: path
          description: Node ID of review to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid API key. You must be granted a valid key.
          content: {}
        '404':
          description: Review not found
          content: {}
      security:
        - api_key: []
components:
  schemas:
    Dates:
      type: object
      properties:
        created:
          type: string
          description: Date of creation. ISO 8601 date format.
          example: '2010-01-08T20:45:07.000Z'
        changed:
          type: string
          description: Last updated time. ISO 8601 date format.
          example: '2018-03-23T15:58:42.000Z'
        publishedAt:
          type: string
          description: Date the resource was published online. ISO 8601 date format.
          example: '2010-11-26T15:21:00.000Z'
    Author:
      type: object
      properties:
        uid:
          type: integer
          description: User ID
          format: int64
          example: 1
        name:
          type: string
          example: John Doe
        url:
          type: string
          example: 'https://heavymetal.dk/users/asmodeus'
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: integer
                description: Numeric error code
                format: int64
                example: 1
                default: 1
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
              message:
                type: string
                description: Human readable text message explaining the error.
                example: >-
                  Invalid parameters. Your request is missing a required
                  parameter.
    Review:
      type: object
      properties:
        nid:
          type: integer
          description: The review node ID.
          format: int64
          example: 13701
        title:
          type: string
          example: Reign in Blood
        artistName:
          type: string
          example: Slayer
        releaseTitle:
          type: string
          example: Slayer - Reign in Blood
        url:
          type: string
          example: 'https://heavymetal.dk/anmeldelse/slayer-reign-blood'
        apiRef:
          type: string
          example: 'https://heavymetal.dk/api/v1/reviews/13701?api_key=[API_KEY]'
        release:
          $ref: '#/components/schemas/Release'
        rating:
          type: integer
          format: int64
          example: 10
        tagline:
          type: string
          nullable: true
          example: Reign In Blood er en milepæl indenfor metal
        summary:
          type: string
          example: <p>Reign In Blood er en milepæl indenfor metal</p>
        bodyHtml:
          type: string
          description: The full HTML review text.
          example: >-
            <p>Tom Arayas åbningsskrig i intronummeret Angel Of Death, er
            muligvis den ondeste lyd [...]</p>
        youtubeEmbedCode:
          type: string
          example: wDk6fvkEp2k
        dates:
          $ref: '#/components/schemas/Dates'
        author:
          $ref: '#/components/schemas/Author'
        meta:
          type: object
          properties:
            classic:
              type: boolean
              description: 'If true, the review has been tagged as a classic masterpiece'
              example: false
            detektoren:
              type: boolean
              description: >-
                If true, the review has been tagged as a Detektoren review and
                should show up in the Detektoren list.
              example: false
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
    Genre:
      type: object
      properties:
        tid:
          type: integer
          description: Genre term ID
          format: int64
          example: 1703
        title:
          type: string
          example: Thrash metal
        url:
          type: string
          example: 'https://heavymetal.dk/genre/thrash-metal'
    Label:
      type: object
      properties:
        tid:
          type: integer
          description: Label term ID
          format: int64
          example: 1099
        title:
          type: string
          example: Universal Records
        url:
          type: string
          example: 'https://heavymetal.dk/pladeselskab/universal-records'
        countryIso:
          type: string
          example: US
          description: 'ISO 3166-1 alpha-2 two-letter country code.'
        websiteUrl:
          type: string
          example: 'http://www.universalrecords.com'
          description: Label website URL
    Release:
      type: object
      properties:
        nid:
          type: integer
          description: The release node ID.
          format: int64
          example: 8224
        title:
          type: string
          example: Slayer - Reign in Blood
        releaseTitle:
          type: string
          example: Reign in Blood
        releaseType:
          type: string
          default: Album
          enum:
            - Album
            - EP
            - Demo
            - DVD
            - Live-album
            - Single
            - Opsamling
        releaseDate:
          type: string
          description: Release date. ISO 8601 date format.
          example: '1986-10-06T23:00:00.000Z'
        artist:
          type: object
          properties: 
            nid:
              type: integer
              description: Artist node ID.
              format: int64
              example: 180
            title:
              type: string
              example: Slayer
              description: Artist name
            url:
              type: string
              example: 'https://heavymetal.dk/artist/slayer'
              description: Artist URL
            apiHref:
              type: string
              example: 'https://heavymetal.dk/api/v1/artists/180?api_key=[API_KEY]'
            description:
              type: string
              nullable: true
              example: null
              description: Artist HTML description text
            countryIso:
              type: string
              example: US
              description: 'ISO 3166-1 alpha-2 two-letter country code.'
        label:
          $ref: '#/components/schemas/Label'
        images:
          type: object
          properties:
            large:
              type: string
              description: URL to large JPEG image of release.
              example: >-
                https://heavymetal.dk/sites/default/files/styles/review/public/slayer-reign-in-blood.jpg?itok=jBJbXYlx
            thumb:
              type: string
              description: URL to thumbnail JPEG image of release.
              example: >-
                https://heavymetal.dk/sites/default/files/styles/review_thumbnail/public/slayer-reign-in-blood.jpg?itok=E4UsJ5mW
        runningTime:
          type: string
          nullable: true
          description: 'Album running time in the form MM:TT'
          example: '28:25'
        tracks:
          type: integer
          nullable: true
          description: Number of tracks on the album.
          format: int64
          example: 10
        tracklist:
          type: array
          nullable: true
          items:
            type: string
          example: [
            "Angel of Death",
            "Piece by Piece",
            "Necrophobic",
            "Altar of Sacrifice",
            "Jesus Saves",
            "Criminally Insane",
            "Reborn",
            "Epidemic",
            "Postmortem",
            "Raining Blood"
            ]
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: query
