openapi: 3.0.1
info:
  title: Heavymetal.dk API
  description: >-
    This is the official documentation for the Heavymetal.dk REST API.
    Access to the endpoints are performed through [Basic HTTP access authentication](https://tools.ietf.org/html/rfc7617). User credentiels are available only upon request.
    Authorization through an API key is still possible but deprecated.
  contact:
    url: 'https://heavymetal.dk/contact'
  version: '1.0'
servers:
  - url: 'https://heavymetal.dk/api/v1'
tags:
  - name: review
    description: Album review
    externalDocs:
      description: Browse on website
      url: 'https://heavymetal.dk/anmeldelser'
  - name: concert
    description: Concerts and concert reviews
  - name: interview
    description: Interview
    externalDocs:
      description: Browse on website
      url: 'https://heavymetal.dk/interviews'
  - name: news
    description: News
    externalDocs:
      description: Browse on website
      url: 'https://heavymetal.dk/nyheder'
  - name: reportage
    description: Reportage
    externalDocs:
      description: Browse on website
      url: 'https://heavymetal.dk/reportager'
  - name: artist
    description: Artist
    externalDocs:
      description: Browse on website
      url: 'https://heavymetal.dk/bands'
  - name: taxonomy
    description: Vocabularies and terms
paths:
  '/reviews':
    get:
      tags:
        - review
      summary: Get a list of reviews
      description: Returns a list of album reviews in descending order by date of publication. The default number of reviews returned is 25. Next-, prev-, first- and last-links are provided in the `Link-response` header to make it possible to query next and previous items or create a paging effect.
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first review returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of reviews returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid API key. You must be granted a valid key.
          content: {}
      security:
        - api_key: []
        - basicAuth: []
  '/reviews/{nodeId}':
    get:
      tags:
        - review
      summary: Get a single review
      parameters:
        - name: nodeId
          in: path
          description: Node ID of review to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Review'
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid API key. You must be granted a valid key.
          content: {}
        '404':
          description: Review not found
          content: {}
      security:
        - api_key: []
        - basicAuth: []
  '/concert_reviews':
    get:
      tags:
        - concert
      summary: Get a list of concert reviews
      description: Returns a list of concert reviews in descending order by date of publication. The default number of concert reviews returned is 25. Next-, prev-, first- and last-links are provided in the `Link-response` header to make it possible to query next and previous items or create a paging effect.
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first concert review returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of concert reviews returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConcertReview'
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid API key. You must be granted a valid key.
          content: {}
      security:
        - api_key: []
        - basicAuth: []
  '/concert_reviews/{nodeId}':
    get:
      tags:
        - concert
      summary: Get a single concert review
      parameters:
        - name: nodeId
          in: path
          description: Node ID of concert review to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ConcertReview'
      security:
        - api_key: []
        - basicAuth: []
  '/concerts':
    get:
      tags:
        - concert
      summary: Get a list of concerts from the concert calendar
      description: Returns a list of concerts in descending order by the start date of the events. The default number of concert returned is 25. Next-, prev-, first- and last-links are provided in the `Link-response` header to make it possible to query next and previous items or create a paging effect.
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first concert returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of concerts returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
        - name: start_time_after
          in: query
          description: Optional unix timestamp (no. of seconds after January 1st, 1970) to limit number of concerts returned by event start time.
          required: false
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Concert'
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid API key. You must be granted a valid key.
          content: {}
      security:
        - api_key: []
        - basicAuth: []
  '/concert/{nodeId}':
    get:
      tags:
        - concert
      summary: Get a single concert
      parameters:
        - name: nodeId
          in: path
          description: Node ID of concert to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Concert'
      security:
        - api_key: []
        - basicAuth: []
  '/interviews':
    get:
      tags:
        - interview
      summary: Get a list of interviews
      description: Returns a list of interviews in descending order by date of publication. The default number of interviews returned is 25. Next-, prev-, first- and last-links are provided in the `Link-response` header to make it possible to query next and previous items or create a paging effect.
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first interview returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of interviews returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConcertReview'
      security:
        - api_key: []
        - basicAuth: []
  '/interviews/{nodeId}':
    get:
      tags:
        - interview
      summary: Get a single interview
      parameters:
        - name: nodeId
          in: path
          description: Node ID of interview to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Interview'
      security:
        - api_key: []
        - basicAuth: []
  '/news':
    get:
      tags:
        - news
      summary: Get a list of news
      description: Returns a list of news in descending order by date of publication. The default number of news returned is 25. Next-, prev-, first- and last-links are provided in the `Link-response` header to make it possible to query next and previous items or create a paging effect.
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first news story returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of news returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/News'
      security:
        - api_key: []
        - basicAuth: []
  '/news/{nodeId}':
    get:
      tags:
        - news
      summary: Get a single news story
      parameters:
        - name: nodeId
          in: path
          description: Node ID of news story to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/News'
      security:
        - api_key: []
        - basicAuth: []
  '/reportages':
    get:
      tags:
        - reportage
      summary: Get a list of reportages
      description: Returns a list of reportages in descending order by date of publication. The default number of reportages returned is 25. Next-, prev-, first- and last-links are provided in the `Link-response` header to make it possible to query next and previous items or create a paging effect.
      parameters:
        - name: offset
          in: query
          description: The ranking number of the first reportage returned
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: Number of reportages returned in one request
          required: false
          schema:
            type: integer
            format: int64
            default: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reportage'
      security:
        - api_key: []
        - basicAuth: []
  '/reportages/{nodeId}':
    get:
      tags:
        - reportage
      summary: Get a single reportage
      parameters:
        - name: nodeId
          in: path
          description: Node ID of reportage to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Reportage'
      security:
        - api_key: []
        - basicAuth: []
  '/artists/{nodeId}':
    get:
      tags:
        - artist
      summary: Get a single artist
      parameters:
        - name: nodeId
          in: path
          description: Node ID of artist to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Artist'
      security:
        - api_key: []
        - basicAuth: []
  '/genres':
    get:
      tags:
        - taxonomy
      summary: Get a list of genres
      description: Returns a complete list of genres in alphabetical order.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        tid:
                          type: integer
                          description: Genre term ID
                          format: int64
                          example: 1703
                        title:
                          type: string
                          example: Thrash metal
                        url:
                          type: string
                          example: 'https://heavymetal.dk/genre/thrash-metal'
                        descriptionHtml:
                          type: string
                          nullable: true
                          example: '<p>Thrash metal er en genre...</p>'
      security:
        - api_key: []
        - basicAuth: []
  '/genres/{termId}':
    get:
      tags:
        - taxonomy
      summary: Get a single genre with references
      parameters:
        - name: termId
          in: path
          description: Term ID of the genre to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tid:
                        type: integer
                        description: Genre term ID
                        format: int64
                        example: 1703
                      title:
                        type: string
                        example: Thrash metal
                      url:
                        type: string
                        example: 'https://heavymetal.dk/genre/thrash-metal'
                      descriptionHtml:
                        type: string
                        nullable: true
                        example: '<p>Thrash metal er en genre...</p>'
                      artists:
                        type: array
                        minItems: 0
                        uniqueItems: true
                        description: Artists referencing this genre.
                        items:
                          type: object
                          properties: 
                            nid:
                              type: integer
                              description: Artist node ID.
                              format: int64
                              example: 180
                            title:
                              type: string
                              example: Slayer
                              description: Artist name
                            url:
                              type: string
                              example: 'https://heavymetal.dk/artist/slayer'
                              description: Artist URL
                            apiHref:
                              type: string
                              example: 'https://heavymetal.dk/api/v1/artists/180'
                      reviews:
                        type: array
                        minItems: 0
                        uniqueItems: true
                        description: Album reviews referencing this genre.
                        items:
                          type: object
                          properties: 
                            nid:
                              type: integer
                              description: Artist node ID.
                              format: int64
                              example: 13701
                            title:
                              type: string
                              example: Slayer - Reign in Blood
                              description: Ŕeview title
                            url:
                              type: string
                              example: 'https://heavymetal.dk/anmeldelse/slayer-reign-blood'
                              description: Artist URL
                            apiHref:
                              type: string
                              example: 'https://heavymetal.dk/api/v1/reviews/13701'
      security:
        - api_key: []
        - basicAuth: []
  '/venues':
    get:
      tags:
        - taxonomy
      summary: Get a list of venues
      description: Returns a complete list of venues in alphabetical order.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        tid:
                          type: integer
                          description: Venue term ID
                          format: int64
                          example: 1909
                        title:
                          type: string
                          example: Royal Arena
                        url:
                          type: string
                          example: 'https://heavymetal.dk/spillested/royal-arena'
                        descriptionHtml:
                          type: string
                          nullable: true
                          example: null
      security:
        - api_key: []
        - basicAuth: []
  '/venues/{termId}':
    get:
      tags:
        - taxonomy
      summary: Get a single venue with concert references
      parameters:
        - name: termId
          in: path
          description: Term ID of the venue to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tid:
                        type: integer
                        description: Venue term ID
                        format: int64
                        example: 1909
                      title:
                        type: string
                        example: Royal Arena
                      url:
                        type: string
                        example: 'https://heavymetal.dk/spillested/royal-arena'
                      apiHref:
                        type: string
                        example: 'https://heavymetal.dk/api/v1/venues/1909'
                      address:
                        type: object
                        properties:
                          streetAddress:
                            type: string
                            example: 'Hannemanns Allé 18'
                          postalCode:
                            type: string
                            example: '2300'
                          city:
                            type: string
                            example: 'København S'
                          countryIso:
                            type: string
                            example: 'DK'
                            description: 'ISO 3166-1 alpha-2 two-letter country code.'
                      province:
                        type: string
                        example: 'koebenhavn'
                        description: 'Lower-case URL-safe name of Danish province where the venue is located.'
                        enum:
                          - koebenhavn
                          - nordsjaelland
                          - bornholm
                          - sjaelland
                          - fyn
                          - syd-soenderjylland
                          - vestjylland
                          - midtjylland
                          - nordjylland
                          - udlandet
                      website:
                        type: string
                        nullable: true
                        example: null
                        description: 'Venue website URL'
                      concerts:
                        type: array
                        minItems: 0
                        uniqueItems: true
                        description: Concert resources referencing this venue.
                        items:
                          type: object
                          properties: 
                            nid:
                              type: integer
                              description: Concert node ID.
                              format: int64
                              example: 33019
                            title:
                              type: string
                              example: Slayer - Royal Arena - 3. december 2018
                              description: Ŕeview title
                            url:
                              type: string
                              example: 'https://heavymetal.dk/koncert/slayer-royal-arena-3-december-2018'
                              description: Artist URL
                            apiHref:
                              type: string
                              example: 'https://heavymetal.dk/api/v1/concerts/33019'
      security:
        - api_key: []
        - basicAuth: []
components:
  schemas:
    Dates:
      type: object
      properties:
        created:
          type: string
          description: Date of creation. ISO 8601 date format.
          example: '2010-01-08T20:45:07.000Z'
        changed:
          type: string
          description: Last updated time. ISO 8601 date format.
          example: '2018-03-23T15:58:42.000Z'
        publishedAt:
          type: string
          description: Date the resource was published online. ISO 8601 date format.
          example: '2010-11-26T15:21:00.000Z'
    Author:
      type: object
      properties:
        uid:
          type: integer
          description: User ID
          format: int64
          example: 1
        name:
          type: string
          example: John Doe
        url:
          type: string
          example: 'https://heavymetal.dk/users/asmodeus'
    Venue:
      type: object
      properties:
        tid:
          type: integer
          description: Venue term ID
          format: int64
          example: 1909
        title:
          type: string
          example: Royal Arena
        url:
          type: string
          example: 'https://heavymetal.dk/spillested/royal-arena'
        address:
          type: object
          properties:
            streetAddress:
              type: string
              example: 'Hannemanns Allé 18'
            postalCode:
              type: string
              example: '2300'
            city:
              type: string
              example: 'København S'
            countryIso:
              type: string
              example: 'DK'
              description: 'ISO 3166-1 alpha-2 two-letter country code.'
        province:
          type: string
          example: 'koebenhavn'
          description: 'Lower-case URL-safe name of Danish province where the venue is located.'
          enum:
            - koebenhavn
            - nordsjaelland
            - bornholm
            - sjaelland
            - fyn
            - syd-soenderjylland
            - vestjylland
            - midtjylland
            - nordjylland
            - udlandet
        website:
          type: string
          nullable: true
          example: null
          description: 'Venue website URL'
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: integer
                description: Numeric error code
                format: int64
                example: 1
                default: 1
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
              message:
                type: string
                description: Human readable text message explaining the error.
                example: >-
                  Invalid parameters. Your request is missing a required
                  parameter.
    Concert:
      type: object
      properties:
            nid:
              type: integer
              description: The concert node ID.
              format: int64
              example: 33019
            title:
              type: string
              example: Slayer - Royal Arena - 3. december 2018
            url:
              type: string
              example: 'https://heavymetal.dk/koncert/slayer-royal-arena-3-december-2018'
              description: Concert review URL
            apiHref:
              type: string
              example: 'https://heavymetal.dk/api/v1/concert/33019'
            venue:
              $ref: '#/components/schemas/Venue'
            cancelled:
              type: boolean
              example: false
              description: 'True if the event is cancelled, false otherwise'
            eventDate:
              type: object
              properties:
                startDate:
                  type: string
                  example: '2018-12-03T00:00:00+01:00'
                  description: 'Event start date. ISO 8601 date format.'
                endDate:
                  type: string
                  example: '2018-12-03T00:00:00+01:00'
                  description: 'Event end date. ISO 8601 date format.'
            festival:
              type: object
              properties:
                isFestival:
                  type: boolean
                  example: false
                  description: 'True if the event is a festival, false otherwise'
                festivalName:
                  type: string
                  nullable: true
                  example: null
                  description: 'Optional festival name'
            meta:
              type: object
              description: Optional meta data and information about the concert.
              properties:
                startTime:
                  type: string
                  nullable: true
                  example: '20:00'
                  description: 'Optional concert start time'
                ticketPrice:
                  type: integer
                  nullable: true
                  description: Optional concert ticket price in DKK
                  format: int64
                  example: 250
                buyLink:
                  type: string
                  nullable: true
                  example: 'https://www.ticketmaster.dk/event/RYA0312?language=da-dk&brand=dk_livenation'
                  description: 'Optional URL to ticket seller website.'
                facebookEventUrl:
                  type: string
                  nullable: true
                  example: 'https://www.facebook.com/events/388074588341446/?ti=icl'
                  description: 'Optional URL to event on Facebook'
            headlinerArtists:
              type: array
              items:
                $ref: '#/components/schemas/ArtistShort'
            supportArtists:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/ArtistShort'
    ConcertReview:
      type: object
      properties:
        nid:
          type: integer
          description: The concert review node ID.
          format: int64
          example: 13701
        title:
          type: string
          example: Slayer - Royal Arena - 3. december 2018
        url:
          type: string
          example: 'https://heavymetal.dk/koncertanmeldelse/slayer-royal-arena-3-december-2018'
          description: Concert review URL
        apiHref:
          type: string
          example: 'https://heavymetal.dk/api/v1/concert_reviews/34358'
        concert:
          $ref: '#/components/schemas/Concert'
        rating:
          type: integer
          nullable: true
          description: Optional rating for the entire concert.
          format: int64
          example: 7
        tagline:
          type: string
          nullable: true
          example: Mandag i metallens tegn
        summary:
          type: string
          nullable: true
          example: <p>Slayer i Royal Arena</p>
          description: Optional summary HTML text
        bodyHtml:
          type: string
          description: The full HTML review text.
          example: '<h2>Mødepligt</h2> <p>En mandag aften i starten af december [...]</p>'
        reviews:
          type: array
          items:
            properties:
              headline:
                type: string
                example: Slayer
                description: Sub-review headline
              reviewTextHtml:
                type: string
                example: 'h2>Ode til Slayer</h2> <p>Man tager ikke bare [...]</p>'
                description: The full HTML sub-review text.
              rating:
                type: integer
                nullable: true
                description: Optional rating for the sub-review.
                format: int64
                example: 5
              image:
                type: string
                nullable: true
                example: 'https://heavymetal.dk/sites/default/files/styles/story/public/47320860_438482733352571_2668822072767021056_n.jpg?itok=Iv-3l2o0'
                description: Optional image URL
        conclusionHtml:
          type: string
          nullable: true
          description: Optional conclusion HTML text.
        primaryImage:
          type: string
          nullable: true
          example: 'https://heavymetal.dk/sites/default/files/styles/story/public/47489919_121133922161589_2866932717809827840_n.jpg?itok=CgVLjhdx'
        dates:
          $ref: '#/components/schemas/Dates'
        author:
          $ref: '#/components/schemas/Author'
    Review:
      type: object
      properties:
        nid:
          type: integer
          description: The review node ID.
          format: int64
          example: 13701
        title:
          type: string
          example: Reign in Blood
        artistName:
          type: string
          example: Slayer
        releaseTitle:
          type: string
          example: Slayer - Reign in Blood
        url:
          type: string
          example: 'https://heavymetal.dk/anmeldelse/slayer-reign-blood'
        apiRef:
          type: string
          example: 'https://heavymetal.dk/api/v1/reviews/13701'
        release:
          $ref: '#/components/schemas/Release'
        rating:
          type: integer
          nullable: true
          format: int64
          example: 10
        tagline:
          type: string
          nullable: true
          example: Reign In Blood er en milepæl indenfor metal
        summary:
          type: string
          nullable: true
          example: <p>Reign In Blood er en milepæl indenfor metal</p>
        bodyHtml:
          type: string
          description: The full HTML review text.
          example: >-
            <p>Tom Arayas åbningsskrig i intronummeret Angel Of Death, er
            muligvis den ondeste lyd [...]</p>
        youtubeEmbedCode:
          type: string
          example: wDk6fvkEp2k
        dates:
          $ref: '#/components/schemas/Dates'
        author:
          $ref: '#/components/schemas/Author'
        meta:
          type: object
          properties:
            classic:
              type: boolean
              description: 'If true, the review has been tagged as a classic masterpiece'
              example: false
            detektoren:
              type: boolean
              description: >-
                If true, the review has been tagged as a Detektoren review and
                should show up in the Detektoren list.
              example: false
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
    News:
      type: object
      properties:
        nid:
          type: integer
          description: The news node ID.
          format: int64
          example: 35502
        title:
          type: string
          example: 'Slayer udgiver musikvideo: Repentless'
        url:
          type: string
          example: 'https://heavymetal.dk/nyhed/slayer-udgiver-musikvideo-repentless'
          description: News entry URL
        apiHref:
          type: string
          example: 'https://heavymetal.dk/api/v1/news/26341'
        primaryImage:
          type: string
          example: 'https://heavymetal.dk/sites/default/files/styles/top_image/public/skaermbillede_2015-06-19_18.18.29.png?itok=VW3bI8f9'
        summary:
          type: string
          nullable: true
        bodyHtml:
          type: string
          description: The full HTML interview text.
          example: '<p>Slayer har netop udgivet titelnummeret for thrashbandets 11. album - og det lyder lovende. [...]</p>'
        artists:
          type: array
          nullable: true
          description: Reference to artists mentioned in the news story.
          items:
            $ref: '#/components/schemas/ArtistShort'
        youtubeEmbedCode:
          type: string
          example: uivxr3O6rSE
        source:
          type: object
          properties:
            title:
              type: string
              nullable: true
              description: Name of the source
            url:
              type: string
              nullable: true
              description: URL to the source website
        dates:
          $ref: '#/components/schemas/Dates'
        author:
          $ref: '#/components/schemas/Author'
    Interview:
      type: object
      properties:
        nid:
          type: integer
          description: The interview node ID.
          format: int64
          example: 35502
        title:
          type: string
          example: Interview med Slayer
        url:
          type: string
          example: 'https://heavymetal.dk/interview/interview-slayer'
          description: Interview URL
        apiHref:
          type: string
          example: 'https://heavymetal.dk/api/v1/interviews/35502'
        primaryImage:
          type: string
          example: 'https://heavymetal.dk/sites/default/files/styles/top_image/public/aphy_0.jpg?itok=VFsEgDWM'
        summary:
          type: string
          nullable: true
          example: <p>I forbindelse med deres kommende album, fik vi os en lille snak med Slayer!</p>
        bodyHtml:
          type: string
          description: The full HTML interview text.
          example: '<h2>Hvad gør Slayer til Slayer?</h2> [...]'
        artist:
          $ref: '#/components/schemas/ArtistShort'
        youtubeEmbedCode:
          type: string
          example: wDk6fvkEp2k
        dates:
          $ref: '#/components/schemas/Dates'
        author:
          $ref: '#/components/schemas/Author'
        meta:
          type: object
          properties:
            detektoren:
              type: boolean
              example: false
              description: >-
                If true, the interview has been tagged as a Detektoren interview and
                should show up in the Detektoren interview list.
    ArtistShort:
      type: object
      properties: 
        nid:
          type: integer
          description: Artist node ID.
          format: int64
          example: 180
        title:
          type: string
          example: Slayer
          description: Artist name
        url:
          type: string
          example: 'https://heavymetal.dk/artist/slayer'
          description: Artist URL
        apiHref:
          type: string
          example: 'https://heavymetal.dk/api/v1/artists/180'
        description:
          type: string
          nullable: true
          example: null
          description: Artist HTML description text
        countryIso:
          type: string
          example: US
          description: 'ISO 3166-1 alpha-2 two-letter country code.'
    Artist:
      type: object
      properties: 
        nid:
          type: integer
          description: Artist node ID.
          format: int64
          example: 180
        title:
          type: string
          example: Slayer
          description: Artist name
        url:
          type: string
          example: 'https://heavymetal.dk/artist/slayer'
          description: Artist URL
        apiHref:
          type: string
          example: 'https://heavymetal.dk/api/v1/artists/180'
        descriptionHtml:
          type: string
          nullable: true
          example: null
          description: Artist HTML description text
        logoImage:
          type: string
          nullable: true
          description: URL to artist JPEG logo
          example: 'https://heavymetal.dk/sites/default/files/styles/bandlogo/public/slayer.jpeg?itok=pSQE25jo'
        countryIso:
          type: string
          example: US
          description: 'ISO 3166-1 alpha-2 two-letter country code.'
        websiteLink:
          type: string
          nullable: true
          description: URL to artist's website
          example: http://www.slayer.net/
        genres:
          type: array
          nullable: true
          maxItems: 2
          items:
            $ref: '#/components/schemas/Genre'
        relatedArtists:
          type: array
          nullable: true
          maxItems: 5
          items:
            $ref: '#/components/schemas/ArtistShort'
        reviews:
          type: array
          description: 'Album reviews for this artist'
          items:
            type: object
            properties:
              nid:
                type: integer
                description: Review node ID.
                format: int64
                example: 26746
              title:
                type: string
                example: Slayer - Repentless
                description: Review title
              url:
                type: string
                example: 'https://heavymetal.dk/anmeldelse/slayer-repentless'
                description: Review URL
              apiHref:
                type: string
                example: 'https://heavymetal.dk/api/v1/reviews/26746'
        interviews:
          type: array
          description: 'Interviews for this artist'
          items:
            type: object
            properties:
              nid:
                type: integer
                description: Interview node ID.
                format: int64
                example: 267461
              title:
                type: string
                example: Interview med Slayer
                description: Review title
              url:
                type: string
                example: 'https://heavymetal.dk/interview/slayer'
                description: Review URL
              apiHref:
                type: string
                example: 'https://heavymetal.dk/api/v1/interviews/26746'
    Genre:
      type: object
      properties:
        tid:
          type: integer
          description: Genre term ID
          format: int64
          example: 1703
        title:
          type: string
          example: Thrash metal
        url:
          type: string
          example: 'https://heavymetal.dk/genre/thrash-metal'
    Label:
      type: object
      properties:
        tid:
          type: integer
          description: Label term ID
          format: int64
          example: 1099
        title:
          type: string
          example: Universal Records
        url:
          type: string
          example: 'https://heavymetal.dk/pladeselskab/universal-records'
        countryIso:
          type: string
          example: US
          description: 'ISO 3166-1 alpha-2 two-letter country code.'
        websiteUrl:
          type: string
          example: 'http://www.universalrecords.com'
          description: Label website URL
    Reportage:
      type: object
      properties: 
        nid:
          type: integer
          description: Reportage node ID.
          format: int64
          example: 180
        title:
          type: string
          example: Copenhell 2019
          description: Repotage title
        url:
          type: string
          example: 'https://heavymetal.dk/reportage/copenhell-2019'
          description: Repotage URL
        apiHref:
          type: string
          example: 'https://heavymetal.dk/api/v1/reportages/35626'
        primaryImage:
          type: string
          example: 'https://heavymetal.dk/sites/default/files/styles/top_image/public/cph_1182.jpg?itok=j3KcTtbd'
        tagline:
          type: string
          nullable: true
          example: Velkommen til helvede
        summary:
          type: string
          nullable: true
          example: <p>10 år i helvede</p>
        bodyHtml:
          type: string
          description: The full HTML reportage text appearing before review texts.
          example: '<p>Copenhell fejrede sit velfortjente tiårsjubilæum i år [...] </p>'
        tabs:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: Onsdag
                description: The title of the tab
              machineName:
                type: string
                example: onsdag
                description: An URL- and machine safe lower-case version of the tab title.
              reviews:
                type: array
                items:
                  type: object
                  properties:
                    artist:
                      $ref: '#/components/schemas/ArtistShort'
                    reviewTextHtml:
                      type: string
                      example: '<h2>Ingen skyer over Gamle Sjælland [...]</h2>'
                      description: 'The HTML review text for this concert'
                    rating:
                      type: integer
                      nullable: true
                      format: int64
                      example: 7
                    image:
                      type: string
                      nullable: true
                      example: 'https://heavymetal.dk/sites/default/files/styles/story/public/eagles.jpg?itok=BLgxoQYY'
                      description: URL to a JPEG image from the concert.
                    author:
                      $ref: '#/components/schemas/Author'
                    stage:
                      type: string
                      nullable: true
                      example: 'Pandæmonium'
                      description: Optional name of the stage where the concert is performed.
                    time:
                      type: string
                      nullable: true
                      example: '2019-06-19T17:00:00+02:00'
                      description: Optional date of the concert. ISO 8601 date format.
        concert:
          $ref: '#/components/schemas/Concert'
        dates:
          $ref: '#/components/schemas/Dates'
        author:
          $ref: '#/components/schemas/Author'
    Release:
      type: object
      properties:
        nid:
          type: integer
          description: The release node ID.
          format: int64
          example: 8224
        title:
          type: string
          example: Slayer - Reign in Blood
        releaseTitle:
          type: string
          example: Reign in Blood
        releaseType:
          type: string
          default: Album
          enum:
            - Album
            - EP
            - Demo
            - DVD
            - Live-album
            - Single
            - Opsamling
        releaseDate:
          type: string
          description: Release date. ISO 8601 date format.
          example: '1986-10-06T23:00:00.000Z'
        artist:
          $ref: '#/components/schemas/ArtistShort'
        label:
          $ref: '#/components/schemas/Label'
        images:
          type: object
          properties:
            large:
              type: string
              description: URL to large JPEG image of release.
              example: >-
                https://heavymetal.dk/sites/default/files/styles/review/public/slayer-reign-in-blood.jpg?itok=jBJbXYlx
            thumb:
              type: string
              description: URL to thumbnail JPEG image of release.
              example: >-
                https://heavymetal.dk/sites/default/files/styles/review_thumbnail/public/slayer-reign-in-blood.jpg?itok=E4UsJ5mW
        runningTime:
          type: string
          nullable: true
          description: 'Album running time in the form MM:TT'
          example: '28:25'
        tracks:
          type: integer
          nullable: true
          description: Number of tracks on the album.
          format: int64
          example: 10
        tracklist:
          type: array
          nullable: true
          items:
            type: string
          example: [
            "Angel of Death",
            "Piece by Piece",
            "Necrophobic",
            "Altar of Sacrifice",
            "Jesus Saves",
            "Criminally Insane",
            "Reborn",
            "Epidemic",
            "Postmortem",
            "Raining Blood"
            ]
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: query
    basicAuth:
      type: http
      scheme: basic
